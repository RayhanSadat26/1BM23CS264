#include <stdio.h>
int max(int a,int b)
{
    return (a>b)?a:b;
}
int knapsack(int weights[],int profit[],int capacity,int n)
{
    int dp[n+1][capacity+1];
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=capacity;j++)
        {
            if(i==0||j==0)
            {
                dp[i][j]=0;
            }
            else if(weights[i-1]<=j)
            {
                dp[i][j]=max(dp[i-1][j],(profit[i]+dp[i-1][j-weights[i]]));
            }
            else
            {
                dp[i][j]=dp[i-1][j];
            }
        }
    }
    return dp[n][capacity];
}
int main()
{
    int val[] = {60, 100, 120};
    int wt[] = {10, 20, 30};
    int W = 50;
    int n = sizeof(val)/sizeof(val[0])
    int maxValue = knapsack(wt, val,W, n);
    printf("Maximum value in knapsack = %d\n", maxValue);
    return 0;
}
